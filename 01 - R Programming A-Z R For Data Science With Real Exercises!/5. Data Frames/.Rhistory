# 首先查看一下路径
getwd()
# 查看一下文件
ls()
# 查看一下文件
dir()
# 导入数据
?read.csv
# 开始导入数据
population_df <- read.csv(file.choose())
population_df <- read.csv("P2-Demographic-Data.csv")
population_df
nrow(population_df)  # 查看行数
ncol(population_df)  # 查看列数
head(population_df)  # head()函数查看开头的几行数据
tail(population_df)  # tail()函数查看末尾的几行数据
head(population_df, n = 10)  # n = 10 来指定提供10行数据
str(population_df)  # str()函数查看数据结构
str(population_df)  # str()函数查看数据结构
summary(population_df)  # summary()函数返回统计结果
# 使用 $ 符号
population_birth <- population_df$Birth.rate
population_birth
ncol(population_birth)
# 使用 $ 符号
population_birth <- population_df$Birth.rate
population_birth
ncol(population_birth)
population_birth[1,]
population_birth[c(1),]
# 使用 $ 符号
population_df[3, 3]  # 获得第三行，第三列的数据
population_df[3, 4]
population_df[3, 3]  # 获得第三行，第三列的数据
population_df[3, 4]  # 获得第三行，第四列的数据
population_df[1, "Birth.rate"]
population_inter_2 <- population_df$Internet.users[2]
population_inter_2
population_inter_vec <- population_df$Internet.users[c(1, 2, 3)]
population_inter_vec
# 基础的操作
population_df[1:10, ]  # 获得子集
population_df[c(1, 5, 10), ]  # 获得1,5,10三行作为子集
is.data.frame(population_df(c(1, 2, 3)))  # 查看是否是data frame
is.data.frame(population_df[(c(1, 2, 3),]))  # 查看是否是data frame
is.data.frame(population_df[c(1, 2, 3),])  # 查看是否是data frame
is.data.frame(population_df[1,])  # 是data frame
is.data.frame(population_df[, 1]) # 不是data frame
population_df[, 1]
is.data.frame(population_df[, 1], drop = F)
is.data.frame(population_df[, 1, drop = F]
is.data.frame(population_df[, 1, drop = F])
is.data.frame(population_df[, 1, drop = F])
population_df[, 1, drop = F]
population_df."Birth.rate"
population_df$Birth.rate * population_df$Internet.users
population_df$Birth.rate * population_df$Country.Name
population_df$MyCal <- population_df$Birth.rate * population_df$Internet.users
population_df$MyCal <- population_df$Birth.rate * population_df$Internet.users
population_df$MyCal
head(population_df)
population_df$xyz <- 1:5
head(population_df)
head(population_df, n = 10)
# 过滤数据 filtering
population_df$Birth.rate < 20
population_df[population_df$Birth.rate > 40, ]
population_df[population_df$Birth.rate > 40 & population_df$Internet.users < 2, ]
population_df[population_df$Income.Group == "High income", ]
levels(population_df$Income.Group)
levels(population_df$Income.Group)
# qplot函数
install.packages("ggplot2")
library(ggplot2)
?ggplot2
?qplot
qplot(data = population_df)
qplot(data = population_df$Birth.rate)
qplot(data = population_df$Birth.rate, x = Internet.users, )
qplot(data = population_df, x = Internet.users, )
qplot(data = population_df, x = Income.Group, y = Birth.rate)
qplot(data = population_df, x = Income.Group, y = Birth.rate, size = I(10))
qplot(data = population_df, x = Income.Group, y = Birth.rate, size = I(5))
qplot(data = population_df, x = Income.Group, y = Birth.rate, size = I(5), color = I("Blue"))
qplot(data = population_df, x = Income.Group, y = Birth.rate, size = I(3), color = I("Blue"), geom = "boxplot")
qplot(data = population_df, x = Income.Group, y = Birth.rate, size = I(0.5), color = I("Blue"), geom = "boxplot")
qplot(data = population_df, x = Income.Group, y = Birth.rate, size = I(0.5), color = I("Red"), geom = "boxplot")
# 使用qplot来进行数据可视化
qplot(data = population_df, x = Internet.users, y = Birth.rate)
qplot(data = population_df, x = Internet.users, y = Birth.rate, size = I(3))
qplot(data = population_df, x = Internet.users, y = Birth.rate, colors = Income.Group, size = I(3))
qplot(data = population_df, x = Internet.users, y = Birth.rate, colour = Income.Group, size = I(3))
#Execute below code to generate three new vectors
Countries_2012_Dataset <- c("Aruba","Afghanistan","Angola","Albania","United Arab Emirates","Argentina","Armenia","Antigua and Barbuda","Australia","Austria","Azerbaijan","Burundi","Belgium","Benin","Burkina Faso","Bangladesh","Bulgaria","Bahrain","Bahamas, The","Bosnia and Herzegovina","Belarus","Belize","Bermuda","Bolivia","Brazil","Barbados","Brunei Darussalam","Bhutan","Botswana","Central African Republic","Canada","Switzerland","Chile","China","Cote d'Ivoire","Cameroon","Congo, Rep.","Colombia","Comoros","Cabo Verde","Costa Rica","Cuba","Cayman Islands","Cyprus","Czech Republic","Germany","Djibouti","Denmark","Dominican Republic","Algeria","Ecuador","Egypt, Arab Rep.","Eritrea","Spain","Estonia","Ethiopia","Finland","Fiji","France","Micronesia, Fed. Sts.","Gabon","United Kingdom","Georgia","Ghana","Guinea","Gambia, The","Guinea-Bissau","Equatorial Guinea","Greece","Grenada","Greenland","Guatemala","Guam","Guyana","Hong Kong SAR, China","Honduras","Croatia","Haiti","Hungary","Indonesia","India","Ireland","Iran, Islamic Rep.","Iraq","Iceland","Israel","Italy","Jamaica","Jordan","Japan","Kazakhstan","Kenya","Kyrgyz Republic","Cambodia","Kiribati","Korea, Rep.","Kuwait","Lao PDR","Lebanon","Liberia","Libya","St. Lucia","Liechtenstein","Sri Lanka","Lesotho","Lithuania","Luxembourg","Latvia","Macao SAR, China","Morocco","Moldova","Madagascar","Maldives","Mexico","Macedonia, FYR","Mali","Malta","Myanmar","Montenegro","Mongolia","Mozambique","Mauritania","Mauritius","Malawi","Malaysia","Namibia","New Caledonia","Niger","Nigeria","Nicaragua","Netherlands","Norway","Nepal","New Zealand","Oman","Pakistan","Panama","Peru","Philippines","Papua New Guinea","Poland","Puerto Rico","Portugal","Paraguay","French Polynesia","Qatar","Romania","Russian Federation","Rwanda","Saudi Arabia","Sudan","Senegal","Singapore","Solomon Islands","Sierra Leone","El Salvador","Somalia","Serbia","South Sudan","Sao Tome and Principe","Suriname","Slovak Republic","Slovenia","Sweden","Swaziland","Seychelles","Syrian Arab Republic","Chad","Togo","Thailand","Tajikistan","Turkmenistan","Timor-Leste","Tonga","Trinidad and Tobago","Tunisia","Turkey","Tanzania","Uganda","Ukraine","Uruguay","United States","Uzbekistan","St. Vincent and the Grenadines","Venezuela, RB","Virgin Islands (U.S.)","Vietnam","Vanuatu","West Bank and Gaza","Samoa","Yemen, Rep.","South Africa","Congo, Dem. Rep.","Zambia","Zimbabwe")
Codes_2012_Dataset <- c("ABW","AFG","AGO","ALB","ARE","ARG","ARM","ATG","AUS","AUT","AZE","BDI","BEL","BEN","BFA","BGD","BGR","BHR","BHS","BIH","BLR","BLZ","BMU","BOL","BRA","BRB","BRN","BTN","BWA","CAF","CAN","CHE","CHL","CHN","CIV","CMR","COG","COL","COM","CPV","CRI","CUB","CYM","CYP","CZE","DEU","DJI","DNK","DOM","DZA","ECU","EGY","ERI","ESP","EST","ETH","FIN","FJI","FRA","FSM","GAB","GBR","GEO","GHA","GIN","GMB","GNB","GNQ","GRC","GRD","GRL","GTM","GUM","GUY","HKG","HND","HRV","HTI","HUN","IDN","IND","IRL","IRN","IRQ","ISL","ISR","ITA","JAM","JOR","JPN","KAZ","KEN","KGZ","KHM","KIR","KOR","KWT","LAO","LBN","LBR","LBY","LCA","LIE","LKA","LSO","LTU","LUX","LVA","MAC","MAR","MDA","MDG","MDV","MEX","MKD","MLI","MLT","MMR","MNE","MNG","MOZ","MRT","MUS","MWI","MYS","NAM","NCL","NER","NGA","NIC","NLD","NOR","NPL","NZL","OMN","PAK","PAN","PER","PHL","PNG","POL","PRI","PRT","PRY","PYF","QAT","ROU","RUS","RWA","SAU","SDN","SEN","SGP","SLB","SLE","SLV","SOM","SRB","SSD","STP","SUR","SVK","SVN","SWE","SWZ","SYC","SYR","TCD","TGO","THA","TJK","TKM","TLS","TON","TTO","TUN","TUR","TZA","UGA","UKR","URY","USA","UZB","VCT","VEN","VIR","VNM","VUT","PSE","WSM","YEM","ZAF","COD","ZMB","ZWE")
Regions_2012_Dataset <- c("The Americas","Asia","Africa","Europe","Middle East","The Americas","Asia","The Americas","Oceania","Europe","Asia","Africa","Europe","Africa","Africa","Asia","Europe","Middle East","The Americas","Europe","Europe","The Americas","The Americas","The Americas","The Americas","The Americas","Asia","Asia","Africa","Africa","The Americas","Europe","The Americas","Asia","Africa","Africa","Africa","The Americas","Africa","Africa","The Americas","The Americas","The Americas","Europe","Europe","Europe","Africa","Europe","The Americas","Africa","The Americas","Africa","Africa","Europe","Europe","Africa","Europe","Oceania","Europe","Oceania","Africa","Europe","Asia","Africa","Africa","Africa","Africa","Africa","Europe","The Americas","The Americas","The Americas","Oceania","The Americas","Asia","The Americas","Europe","The Americas","Europe","Asia","Asia","Europe","Middle East","Middle East","Europe","Middle East","Europe","The Americas","Middle East","Asia","Asia","Africa","Asia","Asia","Oceania","Asia","Middle East","Asia","Middle East","Africa","Africa","The Americas","Europe","Asia","Africa","Europe","Europe","Europe","Asia","Africa","Europe","Africa","Asia","The Americas","Europe","Africa","Europe","Asia","Europe","Asia","Africa","Africa","Africa","Africa","Asia","Africa","Oceania","Africa","Africa","The Americas","Europe","Europe","Asia","Oceania","Middle East","Asia","The Americas","The Americas","Asia","Oceania","Europe","The Americas","Europe","The Americas","Oceania","Middle East","Europe","Europe","Africa","Middle East","Africa","Africa","Asia","Oceania","Africa","The Americas","Africa","Europe","Africa","Africa","The Americas","Europe","Europe","Europe","Africa","Africa","Middle East","Africa","Africa","Asia","Asia","Asia","Asia","Oceania","The Americas","Africa","Europe","Africa","Africa","Europe","The Americas","The Americas","Asia","The Americas","The Americas","The Americas","Asia","Oceania","Middle East","Oceania","Middle East","Africa","Africa","Africa","Africa")
#(c) Kirill Eremenko, www.superdatascience.com
# 构建 data frame
build_df <- data.frame(Countries_2012_Dataset, Codes_2012_Dataset, Regions_2012_Dataset)
is.data.frame(build_df)
head(build_df)
colnames(build_df) <- c("Countries", "Codes", "Regions")
head(build_df)
# 首先移除build_df
rm(build_df)
build_df_colnames <- data.frame(Country = Countries_2012_Dataset, Codes = Codes_2012_Dataset, Regions = Regions_2012_Dataset)
build_df_colnames
build_df_colnames <- data.frame(Country = Countries_2012_Dataset, Codes = Codes_2012_Dataset, Regions = Regions_2012_Dataset)
henad(build_df_colnames)
head(build_df_colnames)
build_df_colnames <- data.frame(Country = Countries_2012_Dataset, Codes = Codes_2012_Dataset, Regions = Regions_2012_Dataset)
head(build_df_colnames)
# merge 数据集
head(population_df)
head(build_df_colnames)
# 开始进行合并
merge_df <- merge(population_df, build_df_colnames, by.x = "Country.Code", by.y = "Code")
# 开始进行合并
merge_df <- merge(population_df, build_df_colnames, by.x = "Country.Code", by.y = "Codes")
head(merge_df)
merge_df$Country <- NULL  # 删除重复列
merge_df$xyz <- NULL  # 将原先测试用的列也删除了
head(merge_df)
# 绘图 - 续
qplot(data = merge_df, x = Internet.users, y = Birth.rate, colour = Region, size = I(5), shape = I(17))
View(merge_df)
# 绘图 - 续
qplot(data = merge_df, x = Internet.users, y = Birth.rate, colour = Regions, size = I(5), shape = I(17))
qplot(data = merge_df, x = Internet.users, y = Birth.rate, colour = Regions, size = I(5), shape = I(17)， alpha = I(0.5))
qplot(data = merge_df, x = Internet.users, y = Birth.rate, colour = Regions, size = I(5), shape = I(17), alpha = I(0.5))
qplot(data = merge_df, x = Internet.users, y = Birth.rate, colour = Regions, size = I(5), shape = I(17), alpha = I(0.3))
qplot(data = merge_df, x = Internet.users, y = Birth.rate, colour = Regions, size = I(5), shape = I(17), alpha = I(0.7))
qplot(data = merge_df, x = Internet.users, y = Birth.rate, colour = Regions, size = I(5), shape = I(17), alpha = I(0.7), main = "Birth Rate v.s. Internet Users")
